<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8" />
	<title>floatdom</title>
	<style>
	
		.floatdem__good {
			position: absolute;
		}

		.tings__move {
			height: 100px;
			width: 80px;
			background: #6495ED;
			border-radius: 4px;
			margin: 4px;
			box-shadow='none';
			transition: all 1s;
			transition-timing-function: cubic-bezier(0.25, 0.1, 0.25, 1);
		}

		.is-irie {
			background: #FF5733;
			height: 80px;
		}

	</style>
</head>
<body>
  
	<button>Magical Button</button>
	<div class="floatdem">
	  <div class="floatdem__good tings">

		<div class="tings__move"></div>
		<div class="tings__move is-irie"></div>
		<div class="tings__move"></div>

	  </div>
	</div>

	<script>
	  function floatDemGoodTings() {
		/* This script will clone a set of elements and append them so they appear in front.  In the meantime, the original list gets hidden and sorted.  Once that is done, the clone acquires information from the original, sorted list, and animates after new top positions get assigned.  The original is now made visible and the clone disappears. */
		var floatdem = document.querySelector('.floatdem');
		var good = floatdem.querySelector('.floatdem__good');
		var tings = good.querySelectorAll('.tings__move');
		var clone = good;

		function floatThings(tings, good) {
		tings.forEach(function(ting, dex) {
		  ting.dataset.dex = dex;
		  if (ting.classList.contains('is-irie')) {
			good.insertBefore(ting, good.firstChild);
		  }
		});
		}

		function getTops(tings) {
		var coords, top, dataDex;
		var result = [];

		tings.forEach(function(ting) {
		  coords = ting.getBoundingClientRect();
		  top = coords.top;
		  dataDex = ting.dataset.dex;
		  result.push({
			top: top,
			dex: dataDex
		  });
		});
		return result;
		}

		function setTops(listTings, cloneTings) {
		var top, dex;

		if (!cloneTings) { // init
		  cloneTings = listTings;
		}

		listTings.forEach(function(listTing, dex) {
		  if (listTing.top) {
			 cloneTings[dex].style.position = 'fixed';
		  }
		  top = listTing.top ? listTing.top : listTing.getBoundingClientRect().top;
		  dex = listTing.dex ? listTing.dex : dex;

		  cloneTings[dex].style.top = top + 'px';
		  cloneTings[dex].style.boxShadow = '0px 0px 8px rgba(0,0,0,0.5)';
		  delete listTing.dex;
		  delete listTing.top;
		});
		}

		function cleanUp() {
		this.style.boxShadow = 'none';
		good.style.visibility = 'visible';

		var clone = this.closest('.floatdem__clone');
		if (clone) clone.remove();
		}

		// add an invisible div, position absolute
		var div = document.createElement('div');
		div.classList.add('floatdem__clone')
		div.innerHTML = clone.outerHTML;
		floatdem.appendChild(div);

		// hide orig
		good.style.visibility = 'hidden';
		var cloneGood = div.querySelector('.floatdem__good');
		var cloneTings = cloneGood.querySelectorAll('.tings__move');
		cloneTings.forEach(cloneTing => cloneTing.addEventListener('transitionend', cleanUp));

		// set or init tops for anim
		setTops(cloneTings);

		// float clone
		floatThings(tings, good);

		// find tops
		var tops = getTops(tings);

		setTops(tops, cloneTings);
	}

	var button = document.querySelector('button');
	button.addEventListener('mouseup', floatDemGoodTings);
	</script>
</body>
</html>
